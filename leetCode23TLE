"""
Given a string s, return the longest palindromic substring in s.

 

Example 1:

Input: s = "babad"
Output: "bab"
Explanation: "aba" is also a valid answer.
Example 2:

Input: s = "cbbd"
Output: "bb"
 

Constraints:

1 <= s.length <= 1000
s consist of only digits and English letters.
"""
class Solution(object):
    def longestPalindrome(self, s):
        a = 0
        l_s = ""
        max = ""
        while 0 < len(s):
            while a < len(s):
                l_s = s[:a + 1][::-1]
                if (s[:a + 1] == l_s and len(s[:a + 1]) > len(max)):
                    max = s[:a + 1]
                a += 1
            s = s[1:]
            a = 0
        return max

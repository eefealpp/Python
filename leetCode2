"""You are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order, and each of their nodes contains a single digit. Add the two numbers and return the sum as a linked list.

You may assume the two numbers do not contain any leading zero, except the number 0 itself.

 

Example 1:


Input: l1 = [2,4,3], l2 = [5,6,4]
Output: [7,0,8]
Explanation: 342 + 465 = 807.
Example 2:

Input: l1 = [0], l2 = [0]
Output: [0]
Example 3:

Input: l1 = [9,9,9,9,9,9,9], l2 = [9,9,9,9]
Output: [8,9,9,9,0,0,0,1]
 

Constraints:

The number of nodes in each linked list is in the range [1, 100].
0 <= Node.val <= 9
It is guaranteed that the list represents a number that does not have leading zeros"""
l1=[9,9,9,9,9,9,9]
indis1= len(l1) - 1
metin1=""
while(indis1 >= 0):
    metin1+=str(l1[indis1])
    indis1-=1
sayi1=int(metin1)
l2=[9,9,9,9]
indis2= len(l2) - 1
metin2=""
while(indis2 >= 0):
    metin2+=str(l2[indis2])
    indis2-=1
sayi2=int(metin2)
toplam=sayi1+sayi2
l3=list(str(toplam))
l3.reverse()
print(l3)

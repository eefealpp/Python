"""
Given two sorted arrays nums1 and nums2 of size m and n respectively, return the median of the two sorted arrays.

The overall run time complexity should be O(log (m+n)).

 

Example 1:

Input: nums1 = [1,3], nums2 = [2]
Output: 2.00000
Explanation: merged array = [1,2,3] and median is 2.
Example 2:

Input: nums1 = [1,2], nums2 = [3,4]
Output: 2.50000
Explanation: merged array = [1,2,3,4] and median is (2 + 3) / 2 = 2.5.
 

Constraints:

nums1.length == m
nums2.length == n
0 <= m <= 1000
0 <= n <= 1000
1 <= m + n <= 2000
-106 <= nums1[i], nums2[i] <= 106
"""
class Solution(object):
    def findMedianSortedArrays(self, nums1, nums2):
        for i in range(len(nums2)):
            nums1.append(nums2[i])
        nums1.sort()
        toplam = 0
        orta = int((len(nums1) / 2))
        print(nums1)
        if (len(nums1) % 2 == 0):
            toplam += float((float(nums1[orta - 1]) + float(nums1[orta])) / 2)
        else:
            toplam += float(nums1[orta])
        return toplam
